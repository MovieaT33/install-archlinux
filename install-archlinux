#!/bin/bash

# Installation script with LUKS encryption using LVM for Arch Linux with UEFI 64-bit.
# Copyright (C) 2024  MovieaT33

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Pre-installation

## Set the console keyboard layout and font

### The default console keymap is US. Available layouts can be listed with:
# localectl list-keymaps

### To set the keyboard layout, pass its name to loadkeys(1). For example, to set a United States keyboard layout:
loadkeys us

### Console fonts are located in /usr/share/kbd/consolefonts/ and can likewise be set with setfont(8) omitting the path and file extension. For example, to use one of the largest fonts suitable for HiDPI screens, run:
# setfont ter-132b

## Verify the boot mode

### To verify the boot mode, check the UEFI bitness:
# cat /sys/firmware/efi/fw_platform_size

EXPECTED_FW_PLATFORM_SIZE=64
fw_platform_size=$(cat /sys/firmware/efi/fw_platform_size)

echo "Verifying the boot mode..."

if [[ $fw_platform_size -ne $EXPECTED_FW_PLATFORM_SIZE ]]; then
  echo "Error: Verifying the boot mode failed. The system must be UEFI $EXPECTED_FW_PLATFORM_SIZE-bit, not $fw_platform_size-bit."
  exit 1
fi

## Connect to the internet

### Ensure your network interface is listed and enabled, for example with ip-link(8):
# ip link

### The connection may be verified with ping:
# ping archlinux.org

HOST="archlinux.org"
PING_COUNT=4

echo "Verifying the connection to the internet..."

if ! ping -c $PING_COUNT $HOST > /dev/null; then
  echo "Error: Verifying the connection to the internet failed. Unable to reach $HOST."
  exit 1
fi

## Update the system clock

### Use timedatectl(1) to ensure the system clock is synchronized
# timedatectl

## Encrypt device

DEVICE=/dev/vda
ENCRYPTED_DEVICE_NAME=crypt
VOLUME_GROUP_NAME=vg0

echo "Encrypting device..."

### Create luks partition

cryptsetup luksFormat $DEVICE

### Open the encrypted device

cryptsetup luksOpen $DEVICE $ENCRYPTED_DEVICE_NAME

### Use the device as phisical volume

pvcreate /dev/mapper/$ENCRYPTED_DEVICE_NAME

### Create a volume group

vgcreate $VOLUME_GROUP_NAME /dev/mapper/$ENCRYPTED_DEVICE_NAME

## Partition the disks

...
